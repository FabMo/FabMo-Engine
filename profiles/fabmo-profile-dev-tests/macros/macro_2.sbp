'!FABMO!name: Z-Zero
'!FABMO!description: Set Z-Zero with Zeroing Plate; after changing cutter
'   2021/09/25 - Refactored (th)
'   Standard Macro Variables are read from Macro #199, only needs to happen once 
'   Note that tracking of current_cutter_Zoffset allows automatic zeroing all three axis including Z, even if re-powered
'   ... as long as cutter is not changed (or, if zeroed at material, material and cutter have not changed)
'   Existing Move and Jog speeds are used for a few ancillary moves
'**NOTE:   " := " Is an OpenSBP function to set variable but only if not previously defined 
'**NOTE Developers: FabMo SBP currently not processing variable on right side of IF ... THEN; nor, variable in system var as  %(&var) 
'**NOTE Developers: This Macro not yet handling proxType.

'--- Check to make sure Standard Macro Variables have been read
$sb_standard_variables_PRESENT := 0								  ' Define test variable if it does not exist
IF $sb_standard_variables_PRESENT == 0 THEN GOTO no_variables

' === Main Program ===
GOSUB initialize_variables
ZZ    ' Set current Z location to 0.00 as a working starting point
PAUSE .5
GOSUB backOffProx_if_needed
GOSUB check_plate_clearance
GOSUB first_home_z_toProx
GOSUB find_z_zero_plate
PAUSE .5
GOSUB finish
END
'==============================

' --- Primary Subroutines ---
first_home_z_toProx:
	PZ, &searchDist_Z, &searchSpeed_Z, &proxNum_Z				' PZ "probes" for a switch or contact in the Z axis
	ZZ															' Reset working zero
    JZ, (-1 * &homeOff_Z)										' Pull back form prox	
	&target_ck = &homeOff_Z + &ooch								' New target for detecting error just past prox
    PZ, &target_ck, &slowSearchSpeed_Z, &proxNum_Z		        ' Slowly probe for prox in final accurate check
    PAUSE .5
    IF %(3) == &target_ck THEN GOTO fail_missed_target			' Look at current Z location to see if we went past the target
    ZZ
    JZ, (-1 * &homeOff_Z)	
    VA,,,0,,,,,,0,,,                                            ' Set 0 location and Table Base Zero
	RETURN

find_z_zero_plate:                                              ' Now Offset to Zerol Plate for this cutter
	PZ, (-1 * &searchDist_Z), &searchSpeed_Zzero, &zZeroNum   
    PAUSE .5
    &target_ck = %(3)
    JZ, (&target_ck + &zPlateOff)
    &target_ck = &target_ck - &ooch 
    PZ, &target_ck, &slowSearchSpeed_Z, &zZeroNum
    PAUSE .5
    IF %(3) == &target_ck THEN GOTO fail_missed_target
    &target_ck = %(3)                                           ' Should now be accurate distance from Z zero 
    &target_ck = &target_ck * -1
    $sb_current_cutter_Zoffset = &target_ck + &zPlateThick		' RECORD: offset of this cutter
    $sb_current_cutter_Zoffset_Units = %(25)                    ' RECORD: units for offset of this cutter
    JZ, ((-1 * $sb_current_cutter_Zoffset) + &safeZ_pullup) 
    VA,,, (&safeZ_pullup)                    					' Only setting local Z, not TBC-Z
    RETURN

finish:
	MZ, &safeZ_pullup - .05										' Trigger location update with a little "finish-wiggle" acknowledgement
    MZ, &safeZ_pullup
	PAUSE "Remember to Remove Clip! The following value will be used for Cutter Offset in Homing:  " + $sb_current_cutter_Zoffset
    RETURN

' --- Checks and Failures ---
	backOffProx_if_needed:
	    IF %(&check_prox_Z) == 1 THEN GOSUB try_backOffProx_z
	    RETURN
	
	try_backOffProx_z:
		MZ, -1 * &backOff_Dist
	    IF %(&check_prox_Z) == 1 THEN GOTO fail_on_prox
	    RETURN    
	
	check_plate_clearance:
	    IF %(&zZeroCk) == 1 THEN GOTO fail_on_plate
		RETURN
	
	fail_on_prox:
	    PAUSE "Z prox switch is already triggered. Cannot clear the tool. Move Off and Retry."
		END
	
	fail_on_plate:
	    PAUSE "Z-zero is already triggered. Cannot zero the tool. Move Off or Clear, and Retry."
		END
	
	fail_missed_target:
	    PAUSE "Target Not Triggered! (Started above prox switch?)"
		END                           

	no_variables:
    	PAUSE "Macro #201 defining Standard Macro Variables does not seem to have been run. Quit and Run then try Macro again."
        END


'--- Initialize Variables and Adjust Standard Macro Variables for Current Tool and Conditions as Needed
initialize_variables:
    &safeZ_pullup = %(28)									  ' Read safeZ-pullup from system variables
    &proxNum_Z = $sb_proxNum_Z
    &check_prox_Z = $sb_proxCk_Z							  
    &zZeroNum = $sb_zZeroNum
    &zZeroCk = $sb_zZeroCk

  'Adjust to current UNITS of tool (handles whether tool Macro Variables are for INCHES or MM)
    &dist_mult = 1.0
    IF %(25) == 1 THEN GOTO tool_MM   		                  ' Read UNIT of Tool; System Variable #25
      tool_IN:
		$sb_current_cutter_Zoffset := .25                     ' Initialize this variables in IN for case tool cutter not yet zeroed
        $sb_current_cutter_Zoffset_Units := 0
        IF $sb_varTableUNITS == "IN" THEN GOTO continue_with_variables
        &dist_mult = 0.0393701                                ' Defined in MM: Multiplier to redefine distances from mm to inches 
        GOTO continue_with_variables
      tool_MM:
        $sb_current_cutter_Zoffset := 6.35                    ' Initialize this variable in MM for case tool cutter not zeroed
        $sb_current_cutter_Zoffset_Units := 1
        IF $sb_varTableUNITS == "MM" THEN GOTO continue_with_variables
        &dist_mult = 25.4                                     ' Defined in IN: Multiplier to redefine distances from inches to mm 
        GOTO continue_with_variables
  'continue adjusting units for current working variables ...
	continue_with_variables:
		&target_ck = 0
		&ooch = $sb_ooch * &dist_mult
		&backOff_dist = &ooch * 5
 		&searchDist_Z = $sb_searchDist_Z * &dist_mult
		&searchSpeed_Z = $sb_searchSpeed_Z * &dist_mult
        &searchSpeed_Zzero = $sb_searchSpeed_Zzero * &dist_mult
		&slowSearchSpeed_Z = $sb_slowSearchSpeed_Z * &dist_mult
		&homeOff_Z = $sb_homeOff_Z * &dist_mult
        &zPlateOff = $sb_zPlateOff * &dist_mult
        &zPlateThick = $sb_zPlateThick * &dist_mult

	RETURN
