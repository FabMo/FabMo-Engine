'!FABMO!name:ATC Calibrate
'!FABMO!description:Initial calibration of Tool-Clip location for ATC
'!FABMO!enabled:true
' ATC Calibration; records location of all the tool clips.
' Brian Owen

' Main =========================================================================
C3																				' >> Home machine in XYZ first. 
VN,0																			' >> Turn off limit switches
SF,0																			' >> Turn off table limits
JS,$xyJog,$zJog																	' >> Set Jog speeds
PAUSE "How many positions exist on your toolbar" &count							' >> Maybe user does not want to use all 7 positions...so give them a choice.
$ATC.numClips = &count															' >> Update ATC settings based on user selection
J2,$firstClipX - %(7),$firstClipY - %(8)										' >> Jog to known first clip location. Offset by table base coordinates in case they've got some weird home position
PAUSE "Insert an empty tool holder in the spindle (no collet or nut)... (M-0051)"
PAUSE "...Insert an empty tool holder upside down in the #1 clip (no collet or nut)... (M-0052)"
PAUSE "Place one end of the calibration clip on the pull stud on tool holder #1 and the other end on the fixed z zero plate. Click OK when ready to proceed! (M-0055)"

'Check Z Zero Input
IF %($ZZero_Status) == 1 THEN GOSUB CONTACT_TRIGGERED_ERROR						' >> We're about to lower the empty tool holder to touch the inverted tool holder in the clip. If input 1 is already triggered then we have a problem
&check = %(3) - %(106)															' >> Calculate max Z travel for probe move
PZ, &check, $xySlow, $ZZero_Sensor												' >> Try to touch tool holders together
IF &Debug = 1 THEN PAUSE "Press OK"
'IF %(3) <= &check THEN MZ,%(3) + $smallBackOff									' >> If we didn't make contact -- let's back off just in case the problem was a lack of electical continuity and we've crashed
IF %(3) <= &check THEN GOSUB CONTACT_ERROR										' >> Exit on error

'Set Clip Height
&Z_clipbase = %(3) - $ATC_holderHeight											' >> If we succeeded in making contact, we record the current position for use later
JZ, %(3) + $smallBackOff														' >> Back off to break contact
JY,%(2) - $ToolBar_Probe_Offset													' >> Shift over in the Y to prepare for first Y probe of calibration tool holder
&start_X = %(1)																	' >> Record X start position
&start_Y = %(2)																	' >> Record Y start position
&start_Z = %(3)																	' >> Record Z start position
&alignment_height = %(3) - $ATC_holderAlignmentHeight - $smallBackOff			' >> Calculate correct z position for plunge
JZ,&alignment_height															' >> Move down to prepare for Y probe
&check = $firstClipY - %(8)														' >> Calculate max distance for Y probe
PY, $firstClipY - %(8), $xySlow, $ZZero_Sensor									' >> Probe in Y to find inverted tool holder
IF &Debug = 1 THEN PAUSE "Press OK"
'IF %(2) >= &check THEN MY,%(2) - $smallBackOff									' >> If we went too far without contact -- first back off in case we crashed
IF %(2) >= &check THEN GOSUB CONTACT_ERROR										' >> Then exit on error.

'Found Left Edge
PAUSE 0.1																		' >> Take a break.
&LEFTSTART = %(2)																' >> Record Y position for use in calculating center location of tool holder
JY, &LEFTSTART - $smallBackOff													' >> Break contact between tool holders
JZ, %(3) + $safe_lift															' >> Lift up clear of the tool holder
JY, &LEFTSTART + $TOOL_OFFSET													' >> Move to other side of tool holder
JZ,&alignment_height															' >> Drop down to prepare for probe
PY, &LEFTSTART, $xySlow, $ZZero_Sensor											' >> Probe in Y to find inverted tool holder
IF &Debug = 1 THEN PAUSE "Press OK"
'IF %(2) <= &LEFTSTART THEN MY,%(2) + $smallBackOff								' >> If we went too far without contact -- first back off in case we crashed
IF %(2) <= &LEFTSTART THEN GOSUB CONTACT_ERROR									' >> Then exit on error
	
'Found Right Edge
PAUSE 0.1																		' >> Take a break.
&RIGHTSTART = %(2)																' >> Record Y position for use in calculating center location of tool holder
JY,&RIGHTSTART + $smallBackOff													' >> Break contact between tool holders
JZ, %(3) + $safe_lift															' >> Lift up clear of the tool holder
&CENTER_Y = &LEFTSTART + ((&RIGHTSTART - &LEFTSTART) / 2)						' >> Calculate center position in Y axis
J2,$firstClipX - $TOOL_OFFSET - %(7), &CENTER_Y									' >> Jog in front of tool holder
JZ,&alignment_height															' >> Drop down to prepare for probe
&check = $firstClipX - %(7)														' >> Calculate max distance for X probe
PX,$firstClipX - %(7), $xySlow, $ZZero_Sensor									' >> Probe in X to find inverted tool holder
IF &Debug = 1 THEN PAUSE "Press OK"
'IF %(1) >= &check THEN MX,%(1) - $smallBackOff									' >> If we went too far without contact -- first back off in case we crashed
IF %(1) >= &check THEN GOSUB CONTACT_ERROR										' >> Then exit on error

'Found Front Edge
PAUSE 0.1																		' >> Take a break.
&X_EDGE = %(1)																	' >> Record X location of tool holder
JX,&X_EDGE - $smallBackOff														' >> Break contact with tool holder
&CENTER_X = &X_EDGE + $HOLDER_RADIUS * 2										' >> Calculate X location of tool holder center
JZ,%(3) + $safe_lift															' >> Lift up clear of tool holder
JX,&CENTER_X                      												' >> Move to center of tool holder to demonstrate that we've calculated the correct position

&center_X = (&center_X - $sb_homeOff_X * $unitMultiplier) / $unitMultiplier		' >> Convert variable values to inches for storage
&center_Y = (&center_Y - $sb_homeOff_Y * $unitMultiplier) / $unitMultiplier		' >> Convert variable values to inches for storage
&thisZ = (&Z_clipbase + %(9)) / $unitMultiplier									' >> Convert variable values to inches for storage

&toolIdx = 1																	' >> Set up index that will be incremented while recording values for each tool
TOOL_POS_LOOP:
$tools[&toolIdx].X = &center_X 													' >> Record X location of clip (always the same)
$tools[&toolIdx].Y = &center_Y + $TOOL_OFFSET * (&toolIdx - 1)					' >> Record Y location of clip (increments based on tool clip offset variable)
$tools[&toolIdx].Z = &thisZ														' >> Record Z location of clip (always the same)
$tools[&toolIdx].H = -5															' >> Populate bit length
IF &toolIdx = $ATC.numClips THEN GOTO FINISHED									' >> If we've done all the clips we planned to do -- head for the exit.
&toolIdx = &toolIdx + 1															' >> Increment tool index
GOTO TOOL_POS_LOOP																' >> Go through loop for next tool

FINISHED:
$ATC_zZeroX = %(1) / $unitMultiplier											' >> Store X location of fixed Z Zero plate (always the same)
$ATC_zZeroY = (%(2) - 4.125 * $unitMultiplier) / $unitMultiplier				' >> Store Y location of fixed Z Zero plate (always the same)
J2,0,0																			' >> Jog home
PAUSE "Calibration complete (M-0151)"											' >> Display success message
END

' Error Handling ===============================================================
CONTACT_TRIGGERED_ERROR:
PAUSE "Your Z Zero input is already triggered, if the z zero plate on your gantry is plugged in, please unplug and press OK."
END
RETURN

CONTACT_ERROR:
PAUSE "Unable to make contact with tool holder, check that grounding cable is connecting pull stud to fixed z zero plate."
END
RETURNEND